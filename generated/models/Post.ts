/* tslint:disable */
/* eslint-disable */
/**
 * JSONPlaceholder Posts API
 * A sample API for retrieving posts
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Post
 */
export interface Post {
    /**
     * The ID of the user who created the post
     * @type {number}
     * @memberof Post
     */
    userId: number;
    /**
     * The ID of the post
     * @type {number}
     * @memberof Post
     */
    id: number;
    /**
     * The title of the post
     * @type {string}
     * @memberof Post
     */
    title: string;
    /**
     * The content of the post
     * @type {string}
     * @memberof Post
     */
    body: string;
}

/**
 * Check if a given object implements the Post interface.
 */
export function instanceOfPost(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "userId" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "body" in value;

    return isInstance;
}

export function PostFromJSON(json: any): Post {
    return PostFromJSONTyped(json, false);
}

export function PostFromJSONTyped(json: any, ignoreDiscriminator: boolean): Post {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'userId': json['userId'],
        'id': json['id'],
        'title': json['title'],
        'body': json['body'],
    };
}

export function PostToJSON(value?: Post | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'userId': value.userId,
        'id': value.id,
        'title': value.title,
        'body': value.body,
    };
}

